{"ast":null,"code":"var _jsxFileName = \"/home/alfredo_orquiz/projects/school/codefellows/courses/401/todo-app/src/context/setting.jsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext, useEffect } from 'react';\n\n// context is Created!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingsContext = /*#__PURE__*/createContext();\n\n// create our Provider that grants Child Consumers access to values\nfunction SettingsProvider(props) {\n  _s();\n  // we need this, app tells us what children we need to render!\n\n  // context values to share with children\n  let [pagination, setPagination] = useState(3);\n  let [sort, setSort] = useState('');\n  let [display, setDisplay] = useState(false);\n  let [error, setError] = useState(null);\n  const updatePagination = value => {\n    if (parseInt(value)) {\n      // we know that value is an integer if truthy\n      setPagination(value);\n      setError(null);\n      localStorage.setItem('settings', JSON.stringify({\n        pagination,\n        sort,\n        display\n      }));\n    } else {\n      // alert('Please set pagination to a number');\n      setError('Please set pagination to a number');\n    }\n  };\n\n  // when component mounts, load our settings from localStorage\n  useEffect(() => {\n    let savedSettings = localStorage.getItem('settings');\n    // set them back into context values.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      pagination,\n      sort,\n      display,\n      updatePagination,\n      settingsError: error,\n      setError\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsProvider, \"l8F+NvK+fgg/+30kD2r1MZNup14=\");\n_c = SettingsProvider;\nexport default SettingsProvider;\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["useState","createContext","useEffect","SettingsContext","SettingsProvider","props","pagination","setPagination","sort","setSort","display","setDisplay","error","setError","updatePagination","value","parseInt","localStorage","setItem","JSON","stringify","savedSettings","getItem","settingsError","children"],"sources":["/home/alfredo_orquiz/projects/school/codefellows/courses/401/todo-app/src/context/setting.jsx"],"sourcesContent":["import { useState, createContext, useEffect } from 'react';\r\n\r\n// context is Created!\r\nexport const SettingsContext = createContext();\r\n\r\n// create our Provider that grants Child Consumers access to values\r\nfunction SettingsProvider(props) { // we need this, app tells us what children we need to render!\r\n\r\n  // context values to share with children\r\n  let [pagination, setPagination] = useState(3);\r\n  let [sort, setSort] = useState('');\r\n  let [display, setDisplay] = useState(false);\r\n  let [error, setError] = useState(null);\r\n\r\n  const updatePagination = (value) => {\r\n    if (parseInt(value)) { // we know that value is an integer if truthy\r\n      setPagination(value);\r\n      setError(null);\r\n      localStorage.setItem('settings', JSON.stringify({ pagination, sort, display }));\r\n    } else {\r\n      // alert('Please set pagination to a number');\r\n      setError('Please set pagination to a number');\r\n    }\r\n  }\r\n\r\n  // when component mounts, load our settings from localStorage\r\n  useEffect(() => {\r\n    let savedSettings = localStorage.getItem('settings');\r\n    // set them back into context values.\r\n  }, []);\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{ pagination, sort, display, updatePagination, settingsError: error, setError }}>\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default SettingsProvider;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;;AAE1D;AAAA;AACA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAAE;;AAE9C;AACA,SAASG,gBAAgB,CAACC,KAAK,EAAE;EAAA;EAAE;;EAEjC;EACA,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC7C,IAAI,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAI,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,IAAI,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIC,QAAQ,CAACD,KAAK,CAAC,EAAE;MAAE;MACrBR,aAAa,CAACQ,KAAK,CAAC;MACpBF,QAAQ,CAAC,IAAI,CAAC;MACdI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,UAAU;QAAEE,IAAI;QAAEE;MAAQ,CAAC,CAAC,CAAC;IACjF,CAAC,MAAM;MACL;MACAG,QAAQ,CAAC,mCAAmC,CAAC;IAC/C;EACF,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACd,IAAImB,aAAa,GAAGJ,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC;IACpD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEhB,UAAU;MAAEE,IAAI;MAAEE,OAAO;MAAEI,gBAAgB;MAAES,aAAa,EAAEX,KAAK;MAAEC;IAAS,CAAE;IAAA,UAC9GR,KAAK,CAACmB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B;AAAC,GA9BQpB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAgCzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}