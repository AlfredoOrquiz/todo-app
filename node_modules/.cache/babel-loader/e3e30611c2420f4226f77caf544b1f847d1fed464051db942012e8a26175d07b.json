{"ast":null,"code":"var _jsxFileName = \"/home/alfredo_orquiz/projects/school/codefellows/courses/401/todo-app/src/components/todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport Header from './Header.jsx';\nimport ItemForm from './ItemForm.jsx';\nimport ItemList from './ItemList.jsx';\nimport Nav from './Nav.jsx';\nimport '../styles/todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  useEffect(() => {\n    getIncompleteCount();\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n  function getIncompleteCount() {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      incomplete: incomplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listBody\",\n      children: [/*#__PURE__*/_jsxDEV(ItemForm, {\n        list: list,\n        setList: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n        list: list,\n        setList: setList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ToDo, \"/JDSYOociX3yXzlkzS0dd7lE+ho=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Header","ItemForm","ItemList","Nav","ToDo","list","setList","incomplete","setIncomplete","getIncompleteCount","document","title","incompleteCount","filter","item","complete","length"],"sources":["/home/alfredo_orquiz/projects/school/codefellows/courses/401/todo-app/src/components/todo.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Header from './Header.jsx';\nimport ItemForm from './ItemForm.jsx';\nimport ItemList from './ItemList.jsx';\nimport Nav from './Nav.jsx';\nimport '../styles/todo.css';\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n\n  useEffect(() => {\n\n    getIncompleteCount();\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  function getIncompleteCount() {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n  }\n\n  return (\n    <>\n      <Nav />\n      <Header incomplete={incomplete} />\n      <div className='listBody'>\n        <ItemForm list={list} setList={setList} />\n        <ItemList list={list} setList={setList} />\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,oBAAoB;AAAC;AAAA;AAE5B,MAAMC,IAAI,GAAG,MAAM;EAAA;EAEjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IAEdY,kBAAkB,EAAE;IACpBC,QAAQ,CAACC,KAAK,GAAI,eAAcJ,UAAW,EAAC;EAC9C,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,SAASI,kBAAkB,GAAG;IAC5B,IAAIG,eAAe,GAAGP,IAAI,CAACQ,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,CAACC,MAAM;IAChER,aAAa,CAACI,eAAe,CAAC;EAChC;EAEA,oBACE;IAAA,wBACE,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACP,QAAC,MAAM;MAAC,UAAU,EAAEL;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAClC;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB,QAAC,QAAQ;QAAC,IAAI,EAAEF,IAAK;QAAC,OAAO,EAAEC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1C,QAAC,QAAQ;QAAC,IAAI,EAAED,IAAK;QAAC,OAAO,EAAEC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC;EAAA,gBACL;AAEP,CAAC;AAAC,GA1BIF,IAAI;AAAA,KAAJA,IAAI;AA4BV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}